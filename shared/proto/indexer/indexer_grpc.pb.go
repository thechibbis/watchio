// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.29.4
// source: indexer.proto

package indexer

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	IndexerService_GetMovieMagnetic_FullMethodName  = "/catalog.IndexerService/GetMovieMagnetic"
	IndexerService_GetTVShowMagnetic_FullMethodName = "/catalog.IndexerService/GetTVShowMagnetic"
)

// IndexerServiceClient is the client API for IndexerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type IndexerServiceClient interface {
	GetMovieMagnetic(ctx context.Context, in *GetMovieMagneticRequest, opts ...grpc.CallOption) (*GetMovieMagneticResponse, error)
	GetTVShowMagnetic(ctx context.Context, in *GetTVShowMagneticRequest, opts ...grpc.CallOption) (*GetTVShowMagneticResponse, error)
}

type indexerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewIndexerServiceClient(cc grpc.ClientConnInterface) IndexerServiceClient {
	return &indexerServiceClient{cc}
}

func (c *indexerServiceClient) GetMovieMagnetic(ctx context.Context, in *GetMovieMagneticRequest, opts ...grpc.CallOption) (*GetMovieMagneticResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetMovieMagneticResponse)
	err := c.cc.Invoke(ctx, IndexerService_GetMovieMagnetic_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *indexerServiceClient) GetTVShowMagnetic(ctx context.Context, in *GetTVShowMagneticRequest, opts ...grpc.CallOption) (*GetTVShowMagneticResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetTVShowMagneticResponse)
	err := c.cc.Invoke(ctx, IndexerService_GetTVShowMagnetic_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IndexerServiceServer is the server API for IndexerService service.
// All implementations must embed UnimplementedIndexerServiceServer
// for forward compatibility.
type IndexerServiceServer interface {
	GetMovieMagnetic(context.Context, *GetMovieMagneticRequest) (*GetMovieMagneticResponse, error)
	GetTVShowMagnetic(context.Context, *GetTVShowMagneticRequest) (*GetTVShowMagneticResponse, error)
	mustEmbedUnimplementedIndexerServiceServer()
}

// UnimplementedIndexerServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedIndexerServiceServer struct{}

func (UnimplementedIndexerServiceServer) GetMovieMagnetic(context.Context, *GetMovieMagneticRequest) (*GetMovieMagneticResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMovieMagnetic not implemented")
}
func (UnimplementedIndexerServiceServer) GetTVShowMagnetic(context.Context, *GetTVShowMagneticRequest) (*GetTVShowMagneticResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTVShowMagnetic not implemented")
}
func (UnimplementedIndexerServiceServer) mustEmbedUnimplementedIndexerServiceServer() {}
func (UnimplementedIndexerServiceServer) testEmbeddedByValue()                        {}

// UnsafeIndexerServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to IndexerServiceServer will
// result in compilation errors.
type UnsafeIndexerServiceServer interface {
	mustEmbedUnimplementedIndexerServiceServer()
}

func RegisterIndexerServiceServer(s grpc.ServiceRegistrar, srv IndexerServiceServer) {
	// If the following call pancis, it indicates UnimplementedIndexerServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&IndexerService_ServiceDesc, srv)
}

func _IndexerService_GetMovieMagnetic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMovieMagneticRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexerServiceServer).GetMovieMagnetic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: IndexerService_GetMovieMagnetic_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexerServiceServer).GetMovieMagnetic(ctx, req.(*GetMovieMagneticRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _IndexerService_GetTVShowMagnetic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTVShowMagneticRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IndexerServiceServer).GetTVShowMagnetic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: IndexerService_GetTVShowMagnetic_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IndexerServiceServer).GetTVShowMagnetic(ctx, req.(*GetTVShowMagneticRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// IndexerService_ServiceDesc is the grpc.ServiceDesc for IndexerService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var IndexerService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "catalog.IndexerService",
	HandlerType: (*IndexerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMovieMagnetic",
			Handler:    _IndexerService_GetMovieMagnetic_Handler,
		},
		{
			MethodName: "GetTVShowMagnetic",
			Handler:    _IndexerService_GetTVShowMagnetic_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "indexer.proto",
}
